apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

project.ext {
  VERSION="0.0.1"
  STAGE="build/stage/graxxia-$VERSION"
  GROOVY_VERSION="2.4.5"
}

repositories {
    mavenCentral()
    maven {
      name "gral"
      url "http://mvn.erichseifert.de/maven2"
    }
}

configurations {
  compile
}

dependencies {
     compile "org.codehaus.groovy:groovy-all:$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy', version: "$GROOVY_VERSION"
     compile group: 'org.apache.ivy', name:'ivy', version:'2.2.0' 
     compile 'com.lowagie:itext:2.1.7'
     compile 'org.apache.commons:commons-math3:3.5'
     compile 'junit:junit:4.4'
     compile 'commons-cli:commons-cli:1.1'
     compile 'com.xlson.groovycsv:groovycsv:1.0'
     compile 'log4j:log4j:1.2.17'
     compile files(fileTree(dir:'lib', includes:['*.jar']))
}

// Bundle all dependencies into output library
     compile files(fileTree(dir:'lib', includes:['*.jar']))
}

// Bundle all dependencies into output library
jar {
    if(!System.properties.lean) {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        exclude "groovy/**"
        exclude "org/codehaus/**"
        exclude "META-INF/groovy*"
        exclude "META-INF/**/*groovy*"
        exclude "META-INF/BCKEY*"
        exclude "org/bouncycastle/**"
    }
}

groovydoc {
    
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

task doc << {
    groovydoc {
        packageNames = ['']
        destinationDir = new File('doc')
        source = 'src/main/groovy'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}

signing {
    sign configurations.archives
}


uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      //The publication doesn't know about our dependencies, so we have to manually add them to the pom
      pom.withXml {
            def dependenciesNode = asNode().appendNode('dependencies')

            //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
            configurations.compile.allDependencies.grep { it.group && it.version }.each {
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', it.group)
                dependencyNode.appendNode('artifactId', it.name)
                dependencyNode.appendNode('version', it.version)
            }
        }

      pom.artifactId = 'graxxia'
      pom.version  = "1.0.1"

      println "POM Version is $pom.version"

      pom.project {
        name 'Graxxia'
        packaging 'jar'

        // optionally artifactId can be defined here 
        groupId 'org.graxxia'
        
        description 'A application used as an example on how to set up pushing  its components to the Central Repository.'

        url 'http://graxxia.org'

        scm {
          connection 'scm:git:git@github.com:ssadedin/graxxia.git'
          developerConnection 'scm:git:git@github.com:ssadedin/graxxia.git'
          url 'git@github.com:ssadedin/graxxia.git'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'ssadedin'
            name 'Simon Sasdedin'
            email 'ssadedin@gmail.com'
          }
        }
      }
      // pom.writeTo("test.pom.2.xml")
    }
  }
}
